"use strict";(globalThis.webpackChunkfirecracker=globalThis.webpackChunkfirecracker||[]).push([[6326],{"./components/modules/SuperTuesday/stories/OtherKeyRacesSection.stories.js":(K,_,t)=>{t.r(_),t.d(_,{LongNames:()=>l,MixedResults:()=>i,RunoffsAndMultiwinner:()=>c,Zeros:()=>u,__namedExportsOrder:()=>b,default:()=>h});var p=t("./node_modules/@babel/runtime/helpers/esm/defineProperty.js"),f=t("./node_modules/styled-jsx/style.js"),y=t.n(f),E=t("./node_modules/next/dist/compiled/react/index.js"),a=t("./components/modules/SuperTuesday/Sections/SuperTuesdayRacesSection/SuperTuesdayRacesSection.js"),d=t("./components/modules/SuperTuesday/stories/mocks.json"),j=t("./components/modules/ResultsSummary/mocks.json"),P=t("./components/stories/helpers/BreakpointIndicator.js"),M=t("./components/GridLayout/GridMain.js"),g=t("./components/GridLayout/GridContent.js"),R=t("./components/GridLayout/GridRail.js"),o=E.createElement;function m(e,s){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);s&&(r=r.filter(function(I){return Object.getOwnPropertyDescriptor(e,I).enumerable})),n.push.apply(n,r)}return n}function O(e){for(var s=1;s<arguments.length;s++){var n=arguments[s]!=null?arguments[s]:{};s%2?m(Object(n),!0).forEach(function(r){(0,p.default)(e,r,n[r])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):m(Object(n)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))})}return e}const h={decorators:[e=>o(M.default,null,o(g.default,null,o(y(),{id:"3392845153"},[".number-change{contents:'';color:transparent;background:black;max-width:100%;width:60px;}"]),o(P.default,null),o(e,null)),o(R.default,null))],title:"Features/Super Tuesday/Other Key Races",component:a.default},i=e=>o(a.default,e);i.displayName="MixedResults",i.args={races:d.mixedResults.races};const u=e=>o(a.default,e);u.displayName="Zeros",u.args={races:d.zeros.races};const c=e=>o(a.default,e);c.displayName="RunoffsAndMultiwinner";const{runoffWithNoAdvanceAndOneCandidate:T,runoffWithOneAdvancingCandidate:A,runoffWithTwoAdvancingCandidates:D,topTwoWithOneAdvancingNoVotes:v,topTwoWithOneAdvancing:L,topTwoWithTwoAdvancing:S,topFourWithThreeAdvancing:W,topFourWithFourAdvancing:C}=j.scenarios;c.args={races:[T,A,D,v,L,S,W,C].flatMap(({races:e})=>e.map(s=>{const n=s.candidates.filter(r=>r.isWinner);return{stateAbbr:"WA",race:O(O({},s),{},{candidates:n.length?n:s.candidates})}}))};const l=e=>o(a.default,e);l.displayName="LongNames",l.args={races:d.longNames.races};const b=["MixedResults","Zeros","RunoffsAndMultiwinner","LongNames"]}}]);
